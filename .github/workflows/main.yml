# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Run jUnit test
      run: mvn test
      
    - name: Repo Visualizer
      # You may pin to the exact commit or the version.
      # uses: githubocto/repo-visualizer@fd43c6c299627ad88e07698290fb2d32fac3305a
      uses: githubocto/repo-visualizer@0.7.1
      with:
        # A path (relative to the root of your repo) to where you would like the diagram to live. For example: images/diagram.svg. Default: diagram.svg
        output_file: # optional
        # A list of paths to exclude from the diagram, separated by commas. For example: dist,node_modules
        excluded_paths: # optional
        # A list of micromatch globs to exclude from the diagram, separated by semicolons. For example: **/*.png;docs/**/*.{png,ico}
        excluded_globs: # optional
        # The directory (and its children) that you want to visualize in the diagram. Default: "" (repository root directory)
        root_path: # optional
        # The maximum number of nested folders to show files within. Default: 9
        max_depth: # optional
        # The commit message to use when updating the diagram. Default: Repo visualizer: updated diagram
        commit_message: # optional
        # The branch name to push the diagram to (branch will be created if it does not yet exist). For example: diagram
        branch: # optional
        # Whether to push the new commit back to the repository. Must be true or false. Default: true
        should_push: true
        # If given, the name of an artifact to be created containing the diagram. Default: don't create an artifact.
        artifact_name: repo.svg 


      
